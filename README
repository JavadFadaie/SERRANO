Serrano HPC-Service
Overview

The Serrano Software is a command-line utility that allows you to perform signal processing and filtering on data using various kernels and transprecision techniques. It is designed to run on a parallelized environment and provides options for optimizing data processing.
Table of Contents

    Installation
    Usage
    Configuration
    Examples
   
Installation

    The Serrano Software does not require a traditional installation process. You can run it directly from the source code by following these steps:

    Clone the Serrano repository from the GitHub repository (https://github.com/JavadFadaie/SERRANO/tree/main).

    Ensure you have the necessary dependencies installed. These dependencies may include Cmake, C++17, Python, MPI (Message Passing Interface), and other libraries.

    Navigate to the root directory of the Serrano Software. execute this command to generate SERRNAO binary

    1. source module/modHawk.sh
    2. cd build
    3. cmake ..
    4. make 

bash

python3 HPC_Service.py

Usage

To use the Serrano Software, follow the prompts to enter specific parameters:

    Use Case Providers: Choose between "ideko" and "inbestme" as the use case provider.

    Kernel Name: Select the desired kernel for signal processing, such as (inbestme : "kalman filter," "sav gol," "black scholes,") (ideko: "k-means,""fft filter," or "knn")

    Number of Signals: Enter the number of signals you want to process.(inbestme 10 , 100 ) (ideko :110,330,550,770,990,1100 )

    Number of Processes: Specify the number of processes to be used for parallelization.

    Precision: Define the precision level for transprecision techniques.

Once you have provided the necessary input, the software will execute the signal processing according to the selected options.
Configuration

   The output of the processed signal can be found in the following folders:

    For "kalman filter," "sav gol," "black scholes," and "fft filter," check the data/Output_Data/CSVFormat directory.
    For "KMean" and "KNN," check the data/Output_Data/ directory.

The Serrano Software provides several configuration options within the script:

    Parallelization Parameters: You can configure the number of MPI processes for parallel execution.

    Transprecision Techniques: Adjust the precision scenario according to your requirements.

    Kernel Type: Choose between kernels relevant to your use case.

    Workspace and Data Paths: Configure the input and output data paths, workspace, and profiling workspace to match your system setup.

   
Examples

Here are some examples of using the Serrano Software:
Example 1: Running the Software

bash

python3 HPC_Service.py
Enter the use case providers: ideko
Enter the kernel name: knn
Enter the number of signals: 110
Enter the number of processes: 4
Enter the precision: 1

Example 2: Running a Different Kernel

bash

python HPC_Service.py
Enter the use case providers: inbestme
Enter the kernel name: kalman filter
Enter the number of signals: 10
Enter the number of processes: 8
Enter the precision: 2


